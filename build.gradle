/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jake' at '26/01/19 15:48' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */


// Apply the needed plugins to add support for Java
plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'checkstyle'
}

// Sets the use of java 8
sourceCompatibility = '8'
targetCompatibility = '8'

// Declares the java file structure
sourceSets {
    main {
        java {
            srcDir 'src/main/java' // Adds the main programme code
        }
    }
    test {
        java {
            srcDir 'src/test/java' // Adds the test programme code
        }
    }
}

// Declares the location of the main method
mainClassName = 'com.anotherworld.control.GameSessionController'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
    // Sets the getting started version of LWJGL as a dependency and downloads the natives
    implementation 'org.lwjgl:lwjgl:3.2.1'
    implementation 'org.lwjgl:lwjgl-assimp:3.2.1'
    implementation 'org.lwjgl:lwjgl-bgfx:3.2.1'
    implementation 'org.lwjgl:lwjgl-glfw:3.2.1'
    implementation 'org.lwjgl:lwjgl-nuklear:3.2.1'
    implementation 'org.lwjgl:lwjgl-openal:3.2.1'
    implementation 'org.lwjgl:lwjgl-opengl:3.2.1'
    implementation 'org.lwjgl:lwjgl-par:3.2.1'
    implementation 'org.lwjgl:lwjgl-stb:3.2.1'
    implementation 'org.lwjgl:lwjgl-vulkan:3.2.1'
    runtime 'org.lwjgl:lwjgl:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-assimp:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-bgfx:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-glfw:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-nuklear:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-openal:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-opengl:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-par:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl-stb:3.2.1:natives-windows'
    runtime 'org.lwjgl:lwjgl:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-assimp:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-bgfx:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-glfw:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-nuklear:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-openal:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-opengl:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-par:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl-stb:3.2.1:natives-linux'
    runtime 'org.lwjgl:lwjgl:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-assimp:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-bgfx:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-glfw:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-nuklear:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-openal:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-opengl:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-par:3.2.1:natives-macos'
    runtime 'org.lwjgl:lwjgl-stb:3.2.1:natives-macos'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testImplementation 'junit:junit:4.12'
}

task cleanBuildRun { //Tasks to build and run project in right order
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'run'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('run').mustRunAfter 'build'
}

